buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: VersionGetter

class VersionGetter implements Plugin<Project>{
    void apply(Project project) {
    }

    public static String getVersionFromJavaCurrent(Project project, String file)
    {
        String major = "0";

        String prefix = "public static final String version";

        List<String> lines = (List<String>)org.apache.commons.io.FileUtils.readLines(project.file(file));
        for (String s : lines)
        {
            s = s.trim();
            if (s.startsWith(prefix))
            {
                s = s.substring(prefix.length(), s.length() - 1);
                return s.replaceFirst("=","").trim().replaceAll("\"","").replaceAll(";","");
            }
        }
    }
}

version = VersionGetter.getVersionFromJavaCurrent(getProject(), 'src/main/java/mods/flammpfeil/slashblade/SlashBlade.java')
group= "flammpfeil.slashblade" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SlashBlade"

minecraft {
    version = "1.7.2-10.12.1.1101"
    assetDir = "eclipse/assets"
}
processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modname':project.archivesBaseName, 'modid':project.group
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dependencies {
    runtime fileTree(dir: 'libs', include: '*.jar')
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}


jar {
    manifest {
        attributes 'FMLCorePlugin': 'mods.flammpfeil.slashblade.asm.CorePlugin'
        attributes 'FMLCorePluginContainsFMLMod': true
    }
}